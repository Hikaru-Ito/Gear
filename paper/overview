Strotor: A minimalistic approach to navigating large hierarchical data.

■ Abstract

We introduce a new simple interaction technique
that enables users to navigate through large hierarchical data gstructure
using only two keys or one rotating device.

Using the disk-based implementation called "Strotor",
users can find data from a huge hierarchical database
only by rotating a disk.

Strotor can be easily installed in sofas, kitchens, cars, etc.
where standard keyboards and remote controllers are difficult to use.


2個のキーだけを利用して大規模な階層データを効果的にナビゲーションする手法を提案する。
キーを使って階層的に構成されたデータをナビゲーションする場合、
ひとつの階層内の要素を選択する操作と階層を上下する操作のため、
階層内移動と階層上下移動に4個のキーが使われることが多いが、
階層移動に工夫をすることにより、
2つのキーだけを使うことが可能である

■ Introduction

Huge data are often represented as a hierarchical data structure, and
various navigation methods are provided for handling it.
For example, files on Unix are structured hierarchically, and
various commands (cd, ls, etc.) and APIs are provided for navigating through the file system.
Many information visualization techniques for showing huge hierarchical data
have been proposed[Treemap,etc.] and used ...

When a user cannot use a pointing device or a standard keyboard,
sekection-based(?) interaction techniques are widely used for
navigating through hierarchical data.

順番にやることが多い。

For example, a user can hierarchically find a mp3 file by
selecting an artist from the list of artist names,
selecting an album title from the title list,
and selecting an mp3 file from the song list.
Users can do these jobs by using a mouse,
but they can also do the same job by using arrow keys.

For example,
users can use two keys for choosing an entry from the list
(e.g. selecting an artist from the artist list),
and another key is used for selecting an entry and show the next level
(e.g. selecting an artist and show album titles).
It is sometimes necessary to use one more key for going back to the previous state
(e.g. showing the artist list for artist selection).

This 4-way navigation is popular on small devices.
AppleRemote[] has 4 buttons for content navigation,
and many small MP3 players (e.g. Rio) have 4 buttons for
selecting a song from the hierarchical data.
The technique is also available on desktop software like the Finder program on Mac.

Using 4 keys might be okay in many cases, but it would be much better
if we could do the same navigation task using only 2 keys.
In that case, 
we can use a rotating device like a disk or a cylinder and
only by moving the devise clockwise/counterclockwise

We have developed a new technique where only two keys are required
for navigating through large data.

(語源)
Navigating large structured data through rotation.

** Method and Examples

(1) Display the selected element, its siblings, its ancestors and their siblings.
highlight the selected element.
(2) If the selected element has children, wait for 1 second, select the
first child, and perform (1).
As a result, all the siblings of the newly selected element appear in the list.
(3) When a user types U or D, select the element that is displayed next to the currently
selected element and perform (1).
If the depth of the newly selected element is different from the currently
selected element, siblings of the currently selected element will disappear.




階層的データ構造は大きなデータを表現するのによく使われている
 多量のコンテンツは大抵階層的に表現されており、階層をたどることによって検索される
  Unixのファイルシステム
  iTunes
 辞書や日付なども一種の階層構造で扱うことが多いので
  階層データは相当広い範囲で使われている

このため、階層をたどったり検索したりするインタフェースも沢山ある
 Unixのシェル
  cd abc; cd ..; ls
 フォルダのウィンドウ
  いくつかの異なる方法が用意されている
  階層メニュー
  明示的に階層をたどるWindowsのTreeViewみたいなのもある。
 階層情報を視覚化する様々な手法[][]が昔から提案されている

マウスが使えるときはいろんな視覚化手法/GUI手法があるが、
 フォルダ、Treemap、
 子供をクリックして選択するとか[大抵のもの]、ズーミングで開くとか[LensBar]、別ウィンドウを開くとか、

  しかし、ポインティングデバイスを使えない場合も多い
  リモコンは大抵ボタンだけで操作するものだし、
   車の運転中や料理中ポインティングデバイスは使いにくいが音楽コンテンツを選択したいことはある
   小型にしたい場合や価格の問題があるときはキーやスイッチだけで使えると嬉しい。

ポインティングデバイスが使えない場合、
ノードをトラバースして段階的にたどることが多い
 階層のトラバース
  子供を選択
  兄弟に移動
  親に戻る

 ボタンやキーボードだけでやりたい場合は以下のような操作をよく使う
  下位階層を選択し開く操作
  隣の要素に移る操作
  上位階層に戻る操作
  を用意するのが一般的であり、
 たとえばRioのようなMP3プレーヤやAppleRemote[]ではこのようなやり方
  テレビのリモコンでもこうやって選ぶものは多いと思う
  このためには4個の操作=4個のボタンが使われるのが普通であり、操作に手間がかかったり使えない場所が多かったりする
  もしくは選択用のジョグダイヤルと確定用のボタンを用意することもある
 本論文では、2個の操作だけで階層構造をトラバースして任意のコンテンツをブラウズする方法(Strotor)を示す。
  上下ボタンを押すだけ、あるいはダイヤルを左右に回転するだけであらゆるコンテンツをブラウジングできる

■ ショッピングモールの店の例を用いて手法を説明する。

Strotorでは以下の手法をとることによって階層データのナビゲーションを可能にしている。

(1. Depth-firstで階層全体をリスト表現する)
2. 選択要素とその祖先の兄弟をリスト表示する
3. 選択要素に子が存在する場合、一定時間してから長男を選択して2.の表示を行なう。
   この結果、一定時間後にひとつ下の階層まで表示されることになる
4. キーを押すと選択要素を上下に移動させて2.を実行する。
   この結果、移動先が上位の階層のとき、これまで見えていた階層は非表示になる

3.のため、下の階層は自動的に表示される
4.のため、上の階層への移動は簡単である。

Examples

We will show how these works, using a hierarchical data structure
of the shops in a shopping mall shown in Figure ???.
Rectangles with thick border represent categories, and
other rectangles represent individual shops.

When the system is started, only the shops and categories
at the top level are displayed (Figure 2).
When the user types the Down key,
the second element (Stationery store) is selected (Figure 3) and so on.

If the user types D two more times, 
Food/drink category is selected (Figure 4).
If the user stops typing keys and waits for one secound, the shops under the Food/drink
category are displayed and the first entry (Liquor shop) is automatically
selected (Figure 5).

When the user types D twice and stops typing,
``Fresh grocery'' category is selected (Figure 6), and
the shops under the category is automatically selected (Figure 7).

When the user types U here, ``Fresh grocery'' is selected,
the shops under ``Fresh grocery'' disappears (Figure 6).
If the user types U two more times, the display changes to Figure 5,
and one more typing U will generate? Figure 4.

If the user types D after Figure 4, the next visible entry
(Clothing) is selected (Figure 8), and
then change to Figure 9.

When the user types D twice after Figure 7,
``Clothing'' is selected, and Figure 8 appears.

In this way, users can navigate through the hierarchical structure
only by typing U/D keys at the right timing.





「U」キーと「D」キーだけを利用する。
リストから項目を選択するのに利用するが、階層の上下移動にも利用する。

  * 階層構造はリストとして表現する
  * U/Dで選択ノードを移動させる
  * 同じ階層のノードがリストされているときはこれをU/Dで選択する
  * リストの端でU/Dを押したときは、現在表示されている上位階層のノードに移動し、
    開いていた階層は閉じる
  * 子供ノードが存在するノードを選択している場合、一定時間後に子供の階層を自動的に開く。


  * 同じ階層のリストの一番上を選択した状態でUを押すと親ノードを選択して子供は全部とじる
  * 同じ階層のリストの一番下を選択した状態でDを押すと親ノードの次のノードを選択し、子供は全部とじる
    親ノードがその階層で一番下にあるときは...
  (1) 兄弟の選択操作中、リストの端より先に移動しようとしたら上位階層に移動し、下位階層は閉じる。
  * 選択したのエントリに子供階層が存在するとき、一定時間がたてば自動的に下位階層を開いて先頭エントリを選択する


** Implementation

A prototype system was built in JavaScript and the system
runs on any modern browser.
Huge list of of movies, animes, musics, and e-books are listed in one
window, and the content is shown in another browser window.
Users can hit two arrow keys or use the PowerMate
device for the navigation.

Selecting a content only by rotating a dial is very 気持ち良い。



■ 実装

 Webブラウザ上にJSで実装
  KBふたつだけなので簡単
 マウス中ボタンでダイヤル、それを改造したものでも大丈夫
 PowerMateで回転でもできる

 音楽ソース、ニュースソース、動画、Wikipediaなどあらゆるものをダイヤルやペダルだけで検索できる

■ 既存の手法

 Macのファインダでは4個のキーを使う

 Introでも言っているが
 2つのボタンだけで操作できるものは存在しない(と思う)

 ジョグダイヤルと選択ボタンを使うものはよくある。

 ソニーのインフォキャリー
  http://www.watch.impress.co.jp/mobile/column/stapa/2000/02/07/
  ジョグダイヤルと押しボタンが使われていた
  http://153.127.244.43/pdf/2013-01-07/45499.pdf
  読んだ後は目次に戻ってしまう

 階層メニュー
  下の階層が自動的に開くところはStrotorと同じだが、
  1段は自動的に開くがマウスを右に動かして選択する必要がある

 視覚化の研究としてもいろいろ試みられている
  Hyperbolic Tree[]
  Treemap[]
  Sunburst[Stasko]
  LensBar[]
  TreemapやSunburstは最近ポピュラーになりつつある

■ 議論

 マウスが使えるときはマウスとかを使えばよい
 ほとんど何も使えないところでも、ダイヤルとかペダルとかだけで階層情報をたどれるのが良いところ

 操作にタイミングが必要なのは良くない

 辞書でも何でもソートできるものはすべて階層データとして扱えるから応用は広い

フィードバックとして音声を利用すれば、ディスプレイなくても使える。
今選んだものをスピーチすればいいからである。

■ ユーザ評価

客観的評価はできていないが
家でずっと使っているので感想を言うことができる。

とにかく回すことしかできないので操作を迷うことがほとんどなく、
そのうちできるようになるものである



 どうやるべきか?
  デカいデータからどれぐらい簡単に捜すことができるか?
  遅いことは確かなのだが
   どれぐらい遅いか計測すべき?
 どれぐらい嬉しいか
  これは評価むずかしい
 どれぐらい嬉しいかを評価したいところだが
 ザッピングの嬉しさとか評価できるのか?
